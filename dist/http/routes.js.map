{"version":3,"sources":["../../src/http/routes.js"],"names":["router","Router","get","req","res","send","setHeader","JSON","stringify","post","block","body","data","console","log","update","map","s","_socket","remoteAddress","remotePort","peer"],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEAD,OAAOE,GAAP,CAAW,eAAX,EAA4B,CAACC,GAAD,EAAMC,GAAN,KAAeA,IAAIC,IAAJ,CAAS,IAAT,CAA3C;;AAEAL,OAAOE,GAAP,CAAW,QAAX,EAAqB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/BA,QAAIE,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACAF,QAAIC,IAAJ,CAASE,KAAKC,SAAL,CAAe,gBAAMN,GAAN,EAAf,CAAT;AACH,CAHD;;AAKAF,OAAOS,IAAP,CAAY,OAAZ,EAAqB,CAACN,GAAD,EAAMC,GAAN,KAAc;AAC/B,UAAMM,QAAQ,mBAAOP,IAAIQ,IAAJ,CAASC,IAAhB,CAAd;AACAC,YAAQC,GAAR,CAAYX,IAAIQ,IAAhB;AACA,oBAAMI,MAAN,CAAaL,KAAb;AACA,6BAAU,iCAAV;AACAG,YAAQC,GAAR,CAAY,qCAAZ,EAAmDJ,KAAnD;AACAN,QAAIC,IAAJ,CAASK,KAAT;AACH,CAPD;;AASAV,OAAOE,GAAP,CAAW,QAAX,EAAqB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/BA,QAAIC,IAAJ,CAAS,kBAAQH,GAAR,GAAcc,GAAd,CAAkBC,KAAM,GAAEA,EAAEC,OAAF,CAAUC,aAAc,IAAGF,EAAEC,OAAF,CAAUE,UAAW,EAA1E,CAAT,EAD+B,CACyD;AAC3F,CAFD;;AAIApB,OAAOS,IAAP,CAAY,UAAZ,EAAwB,CAACN,GAAD,EAAMC,GAAN,KAAc;AAClC,UAAM,EAAEiB,IAAF,KAAWlB,IAAIQ,IAArB;AACA,+BAAe,CAACU,IAAD,CAAf;AACAR,YAAQC,GAAR,CAAY,4CAAZ,EAA0DO,IAA1D;AACAjB,QAAIC,IAAJ,CAASgB,IAAT;AACH,CALD;;kBAOerB,M","file":"routes.js","sourcesContent":["import express from 'express';\n\nimport chain from '../chain';\nimport { create } from '../block';\nimport sockets from '../p2p/sockets';\nimport { connectToPeers } from '../p2p/index';\nimport { broadcast } from '../p2p/handlers';\nimport { responseLatestMsg } from '../p2p/actions';\n\nconst router = express.Router();\n\nrouter.get('/health-check', (req, res) =>  res.send('OK'));\n\nrouter.get('/chain', (req, res) => {\n    res.setHeader('Content-Type', 'application/json');\n    res.send(JSON.stringify(chain.get()))\n});\n\nrouter.post('/mine', (req, res) => {\n    const block = create(req.body.data);\n    console.log(req.body)\n    chain.update(block);\n    broadcast(responseLatestMsg());\n    console.log('New block in chain has been added: ', block);\n    res.send(block);\n});\n\nrouter.get('/peers', (req, res) => {\n    res.send(sockets.get().map(s => `${s._socket.remoteAddress}:${s._socket.remotePort}`)); // eslint-disable-line no-underscore-dangle\n});\n\nrouter.post('/connect', (req, res) => {\n    const { peer } = req.body;\n    connectToPeers([peer]);\n    console.log('New peer in p2p websocket has been added: ', peer);\n    res.send(peer);\n});\n\nexport default router;\n"]}